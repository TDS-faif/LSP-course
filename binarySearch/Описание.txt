Всички програми в папката правят едно и също. Търсят дума в предварително подреден списък и връщат нейното местоположение, ако е намерена в списъка. Търсенето е бинарно и това го прави много бързо. Всяка една от двете програми има 2 command line аргумента
1ви - думата която търсим
2ри - 1 ако искаме да виждаме откритите думи на всяка стъпка
Пример: ./bin_search dog 1

bin_search.c
Откритите думи се съхраняват в масив с фиксиран размер. Това решение е добро, бързо и сравнително просто тъй като не се налага динамична работа с памет, но на теория ще бъде проблем ако във файла има думи с размер по-голям от 183 (фиксирания размер на масива). Числото 183 е избрано, защото според wikipedia с такъв размер е била най-дългата дума ползвана в английската литература някога.

bin_search_with_realloc.c
Откритите думи се съхраняват в динамично заделен масив. При всяка нова открита дума се прави сравнение дали заделената памет не е твърде малко и в такъв случай се увеличава тази памет до необходимият нов размер. Презаделянето не се извършва задължително за всяка нова дума и никога не се извършва ако паметта е достатъчно, защото е сравнително бавна задача.

bin_search_bad_realloc.c
Същият принцип като при bin_search_with_realloc с тази разлика, че за всяка дума се презаделя нова памет винаги.

В bin_search към всяка нова дума се прикрепя терминираща нула (\0), което обаче не е задължително тъй като се ползват strncmp и strncpy, които работят с фиксирани размери на стринговете и няма да се случи проблем, ако не е налична терминираща нула.
